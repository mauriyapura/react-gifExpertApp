{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAuB5C,OACI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAWlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAzBa,SAACP,GACtBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,QAwBfK,YAAY,6B,+BChCfC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,6DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCJJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAACA,GAAa,IAAD,EAEXjB,mBAAS,CAC/BwB,KAAK,GACLa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA6BrC,OArBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKtB,CAACpB,IASIqB,ED5BuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAKnB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAyDhB,IAEvDoB,GAAS,2CAEX,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEjBxBgB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13ef4256.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputvalue] = useState(\"\"); //sin las comillas queda como undefined y da error\r\n    const handleInputChange= (e) => {\r\n        console.log(e.target.value);\r\n        setInputvalue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cats=>[inputValue,...cats, ]);\r\n            setInputvalue(\"\");\r\n\r\n        }\r\n\r\n        //console.log(\"submit Hecho\")\r\n        \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n                placeholder=\"Escribe lo que buscas\"\r\n            />            \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=b6ym3Brotj3vVPPFyUcHzeXyMBpg9NKs`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=> {\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n} \r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    //console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-0.5s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n        \r\n \r\n       \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn\">{ category }</h3> \r\n\r\n            { loading&&<p>Loading...</p> } \r\n            \r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }              \r\n                            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false              \r\n                });               \r\n                \r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return state;  // {data:[],loading:true}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// snipet rafc utilizado\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    const [categories, setCategories] = useState([\"One Punch\"]);    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}